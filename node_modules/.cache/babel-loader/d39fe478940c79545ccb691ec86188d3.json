{"ast":null,"code":"import _regeneratorRuntime from\"/home/ohwaaan/Hunter/Summer_2022/team/5/client-starter-code-main/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/ohwaaan/Hunter/Summer_2022/team/5/client-starter-code-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _defineProperty from\"/home/ohwaaan/Hunter/Summer_2022/team/5/client-starter-code-main/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _classCallCheck from\"/home/ohwaaan/Hunter/Summer_2022/team/5/client-starter-code-main/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/ohwaaan/Hunter/Summer_2022/team/5/client-starter-code-main/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/ohwaaan/Hunter/Summer_2022/team/5/client-starter-code-main/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/ohwaaan/Hunter/Summer_2022/team/5/client-starter-code-main/node_modules/@babel/runtime/helpers/esm/createSuper.js\";/*==================================================\nNewStudentContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */import Header from'./Header';import{Component}from'react';import{connect}from'react-redux';import{Redirect}from'react-router-dom';import NewStudentView from'../views/NewStudentView';import{addStudentThunk}from'../../store/thunks';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NewStudentContainer=/*#__PURE__*/function(_Component){_inherits(NewStudentContainer,_Component);var _super=_createSuper(NewStudentContainer);// Initialize state\nfunction NewStudentContainer(props){var _this;_classCallCheck(this,NewStudentContainer);_this=_super.call(this,props);_this.handleChange=function(event){_this.setState(_defineProperty({},event.target.name,event.target.value));};_this.handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(event){var student,newStudent;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();// Prevent browser reload/refresh after submit.\nstudent={firstname:_this.state.firstname,lastname:_this.state.lastname,campusId:_this.state.campusId};// Add new student in back-end database\n_context.next=4;return _this.props.addStudent(student);case 4:newStudent=_context.sent;// Update state, and trigger redirect to show the new student\n_this.setState({firstname:\"\",lastname:\"\",campusId:null,redirect:true,redirectId:newStudent.id});case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.state={firstname:\"\",lastname:\"\",campusId:null,redirect:false,redirectId:null};return _this;}// Capture input data when it is entered\n_createClass(NewStudentContainer,[{key:\"componentWillUnmount\",value:// Unmount when the component is being removed from the DOM:\nfunction componentWillUnmount(){this.setState({redirect:false,redirectId:null});}// Render new student input form\n},{key:\"render\",value:function render(){// Redirect to new student's page after submit\nif(this.state.redirect){return/*#__PURE__*/_jsx(Redirect,{to:\"/student/\".concat(this.state.redirectId)});}// Display the input form via the corresponding View component\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(NewStudentView,{handleChange:this.handleChange,handleSubmit:this.handleSubmit})]});}}]);return NewStudentContainer;}(Component);// The following input argument is passed to the \"connect\" function used by \"NewStudentContainer\" component to connect to Redux Store.\n// The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nvar mapDispatch=function mapDispatch(dispatch){return{addStudent:function addStudent(student){return dispatch(addStudentThunk(student));}};};// Export store-connected container by default\n// NewStudentContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\nexport default connect(null,mapDispatch)(NewStudentContainer);","map":{"version":3,"names":["Header","Component","connect","Redirect","NewStudentView","addStudentThunk","NewStudentContainer","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","student","firstname","state","lastname","campusId","addStudent","newStudent","redirect","redirectId","id","mapDispatch","dispatch"],"sources":["/home/ohwaaan/Hunter/Summer_2022/team/5/client-starter-code-main/src/components/containers/NewStudentContainer.js"],"sourcesContent":["/*==================================================\nNewStudentContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport NewStudentView from '../views/NewStudentView';\nimport { addStudentThunk } from '../../store/thunks';\n\nclass NewStudentContainer extends Component {\n  // Initialize state\n  constructor(props){\n    super(props);\n    this.state = {\n      firstname: \"\", \n      lastname: \"\", \n      campusId: null, \n      redirect: false, \n      redirectId: null\n    };\n  }\n\n  // Capture input data when it is entered\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  // Take action after user click the submit button\n  handleSubmit = async event => {\n    event.preventDefault();  // Prevent browser reload/refresh after submit.\n\n    let student = {\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        campusId: this.state.campusId\n    };\n    \n    // Add new student in back-end database\n    let newStudent = await this.props.addStudent(student);\n\n    // Update state, and trigger redirect to show the new student\n    this.setState({\n      firstname: \"\", \n      lastname: \"\", \n      campusId: null, \n      redirect: true, \n      redirectId: newStudent.id\n    });\n  }\n\n  // Unmount when the component is being removed from the DOM:\n  componentWillUnmount() {\n      this.setState({redirect: false, redirectId: null});\n  }\n\n  // Render new student input form\n  render() {\n    // Redirect to new student's page after submit\n    if(this.state.redirect) {\n      return (<Redirect to={`/student/${this.state.redirectId}`}/>)\n    }\n\n    // Display the input form via the corresponding View component\n    return (\n      <div>\n        <Header />\n        <NewStudentView \n          handleChange = {this.handleChange} \n          handleSubmit={this.handleSubmit}      \n        />\n      </div>          \n    );\n  }\n}\n\n// The following input argument is passed to the \"connect\" function used by \"NewStudentContainer\" component to connect to Redux Store.\n// The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nconst mapDispatch = (dispatch) => {\n    return({\n        addStudent: (student) => dispatch(addStudentThunk(student)),\n    })\n}\n\n// Export store-connected container by default\n// NewStudentContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\nexport default connect(null, mapDispatch)(NewStudentContainer);"],"mappings":"4hCAAA;AACA;AACA;AACA;AACA;AACA;AACA,qDACA,MAAOA,OAAP,KAAmB,UAAnB,CACA,OAASC,SAAT,KAA0B,OAA1B,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CAEA,MAAOC,eAAP,KAA2B,yBAA3B,CACA,OAASC,eAAT,KAAgC,oBAAhC,C,2FAEMC,oB,0HACJ;AACA,6BAAYC,KAAZ,CAAkB,qDAChB,uBAAMA,KAAN,EADgB,MAYlBC,YAZkB,CAYH,SAAAC,KAAK,CAAI,CACtB,MAAKC,QAAL,oBACGD,KAAK,CAACE,MAAN,CAAaC,IADhB,CACuBH,KAAK,CAACE,MAAN,CAAaE,KADpC,GAGD,CAhBiB,OAmBlBC,YAnBkB,4FAmBH,iBAAML,KAAN,2IACbA,KAAK,CAACM,cAAN,GAAyB;AAErBC,OAHS,CAGC,CACVC,SAAS,CAAE,MAAKC,KAAL,CAAWD,SADZ,CAEVE,QAAQ,CAAE,MAAKD,KAAL,CAAWC,QAFX,CAGVC,QAAQ,CAAE,MAAKF,KAAL,CAAWE,QAHX,CAHD,CASb;AATa,sBAUU,OAAKb,KAAL,CAAWc,UAAX,CAAsBL,OAAtB,CAVV,QAUTM,UAVS,eAYb;AACA,MAAKZ,QAAL,CAAc,CACZO,SAAS,CAAE,EADC,CAEZE,QAAQ,CAAE,EAFE,CAGZC,QAAQ,CAAE,IAHE,CAIZG,QAAQ,CAAE,IAJE,CAKZC,UAAU,CAAEF,UAAU,CAACG,EALX,CAAd,EAba,sDAnBG,+DAEhB,MAAKP,KAAL,CAAa,CACXD,SAAS,CAAE,EADA,CAEXE,QAAQ,CAAE,EAFC,CAGXC,QAAQ,CAAE,IAHC,CAIXG,QAAQ,CAAE,KAJC,CAKXC,UAAU,CAAE,IALD,CAAb,CAFgB,aASjB,CAED;oEA8BA;AACA,+BAAuB,CACnB,KAAKd,QAAL,CAAc,CAACa,QAAQ,CAAE,KAAX,CAAkBC,UAAU,CAAE,IAA9B,CAAd,EACH,CAED;sBACA,iBAAS,CACP;AACA,GAAG,KAAKN,KAAL,CAAWK,QAAd,CAAwB,CACtB,mBAAQ,KAAC,QAAD,EAAU,EAAE,oBAAc,KAAKL,KAAL,CAAWM,UAAzB,CAAZ,EAAR,CACD,CAED;AACA,mBACE,oCACE,KAAC,MAAD,IADF,cAEE,KAAC,cAAD,EACE,YAAY,CAAI,KAAKhB,YADvB,CAEE,YAAY,CAAE,KAAKM,YAFrB,EAFF,GADF,CASD,C,iCAjE+Bb,S,EAoElC;AACA;AACA;AACA,GAAMyB,YAAW,CAAG,QAAdA,YAAc,CAACC,QAAD,CAAc,CAC9B,MAAO,CACHN,UAAU,CAAE,oBAACL,OAAD,QAAaW,SAAQ,CAACtB,eAAe,CAACW,OAAD,CAAhB,CAArB,EADT,CAAP,CAGH,CAJD,CAMA;AACA;AACA;AACA,cAAed,QAAO,CAAC,IAAD,CAAOwB,WAAP,CAAP,CAA2BpB,mBAA3B,CAAf"},"metadata":{},"sourceType":"module"}