{"ast":null,"code":"/*==================================================\nNewCampusContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\n\n/*----------------EVERYTHING BELOW HERE IS MY TEST CODE,MAY OR MAY NOT WORK------------*/\n\n/*----------------EVERYTHING BELOW HERE IS MY TEST CODE,MAY OR MAY NOT WORK------------*/\n\n/*----------------EVERYTHING BELOW HERE IS MY TEST CODE,MAY OR MAY NOT WORK------------*/\n\n/*----------------LOOK AT NewStudentContainer.js IF SOMETHING DONT WORK----------------*/\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { addCampusThunk } from '../../store/thunks';\nimport NewCampusView from '../views/NewCampusView';\n\nclass NewCampusContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let campus = {\n        name: this.state.name,\n        address: this.state.address,\n        description: this.state.description\n      };\n      let newCapus = await this.props.addCampus(campus);\n      this.setState;\n    };\n\n    this.state = {\n      name: \"\",\n      address: \"\",\n      description: \"\",\n      campusId: null,\n      redirect: false,\n      redirectId: null\n    };\n  }\n\n}\n\nconst mapDispatch = dispatch => {\n  return {\n    addCampus: campus => dispatch(addCampusThunk(campus))\n  };\n};\n\nexport default connect(null, mapDispatch)(NewCampusContainer);","map":{"version":3,"names":["Header","Component","connect","Redirect","addCampusThunk","NewCampusView","NewCampusContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","campus","state","address","description","newCapus","addCampus","campusId","redirect","redirectId","mapDispatch","dispatch"],"sources":["/home/ohwaaan/Hunter/Summer_2022/team/5/Client-Side/src/components/containers/NewCampusContainer.js"],"sourcesContent":["/*==================================================\nNewCampusContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\n\n/*----------------EVERYTHING BELOW HERE IS MY TEST CODE,MAY OR MAY NOT WORK------------*/ \n/*----------------EVERYTHING BELOW HERE IS MY TEST CODE,MAY OR MAY NOT WORK------------*/ \n/*----------------EVERYTHING BELOW HERE IS MY TEST CODE,MAY OR MAY NOT WORK------------*/ \n/*----------------LOOK AT NewStudentContainer.js IF SOMETHING DONT WORK----------------*/ \n\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { addCampusThunk } from '../../store/thunks'; \nimport NewCampusView from '../views/NewCampusView';\n\nclass NewCampusContainer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      name:         \"\", \n      address:      \"\", \n      description:  \"\",\n      campusId:   null, \n      redirect:   false, \n      redirectId: null\n    };\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    let campus = {\n      name:         this.state.name,\n      address:      this.state.address,\n      description:  this.state.description\n    };\n\n    let newCapus = await this.props.addCampus(campus);\n\n    this.setState\n  }\n\n\n\n\n\n}\n\nconst mapDispatch = (dispatch) => {\n  return({\n      addCampus: (campus) => dispatch(addCampusThunk(campus)),\n  })\n}\nexport default connect(null, mapDispatch)(NewCampusContainer);"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;;AACA;;AACA;AAEA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;;AAEA,MAAMC,kBAAN,SAAiCL,SAAjC,CAA2C;EACzCM,WAAW,CAACC,KAAD,EAAO;IAChB,MAAMA,KAAN;;IADgB,KAYlBC,YAZkB,GAYHC,KAAK,IAAI;MACtB,KAAKC,QAAL,CAAc;QACZ,CAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;MADtB,CAAd;IAGD,CAhBiB;;IAAA,KAkBlBC,YAlBkB,GAkBH,MAAML,KAAN,IAAe;MAC5BA,KAAK,CAACM,cAAN;MAEA,IAAIC,MAAM,GAAG;QACXJ,IAAI,EAAU,KAAKK,KAAL,CAAWL,IADd;QAEXM,OAAO,EAAO,KAAKD,KAAL,CAAWC,OAFd;QAGXC,WAAW,EAAG,KAAKF,KAAL,CAAWE;MAHd,CAAb;MAMA,IAAIC,QAAQ,GAAG,MAAM,KAAKb,KAAL,CAAWc,SAAX,CAAqBL,MAArB,CAArB;MAEA,KAAKN,QAAL;IACD,CA9BiB;;IAEhB,KAAKO,KAAL,GAAa;MACXL,IAAI,EAAU,EADH;MAEXM,OAAO,EAAO,EAFH;MAGXC,WAAW,EAAG,EAHH;MAIXG,QAAQ,EAAI,IAJD;MAKXC,QAAQ,EAAI,KALD;MAMXC,UAAU,EAAE;IAND,CAAb;EAQD;;AAXwC;;AAuC3C,MAAMC,WAAW,GAAIC,QAAD,IAAc;EAChC,OAAO;IACHL,SAAS,EAAGL,MAAD,IAAYU,QAAQ,CAACvB,cAAc,CAACa,MAAD,CAAf;EAD5B,CAAP;AAGD,CAJD;;AAKA,eAAef,OAAO,CAAC,IAAD,EAAOwB,WAAP,CAAP,CAA2BpB,kBAA3B,CAAf"},"metadata":{},"sourceType":"module"}