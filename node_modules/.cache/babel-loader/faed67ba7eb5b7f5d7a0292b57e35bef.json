{"ast":null,"code":"import _classCallCheck from\"/home/ohwaaan/Hunter/Summer_2022/team/5/client-starter-code-main/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/ohwaaan/Hunter/Summer_2022/team/5/client-starter-code-main/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/ohwaaan/Hunter/Summer_2022/team/5/client-starter-code-main/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/ohwaaan/Hunter/Summer_2022/team/5/client-starter-code-main/node_modules/@babel/runtime/helpers/esm/createSuper.js\";/*==================================================\n/src/components/containers\\AllCampusesContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */import Header from'./Header';import{Component}from\"react\";import{connect}from\"react-redux\";import{fetchAllCampusesThunk}from\"../../store/thunks\";import{AllCampusesView}from\"../views\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AllCampusesContainer=/*#__PURE__*/function(_Component){_inherits(AllCampusesContainer,_Component);var _super=_createSuper(AllCampusesContainer);function AllCampusesContainer(){_classCallCheck(this,AllCampusesContainer);return _super.apply(this,arguments);}_createClass(AllCampusesContainer,[{key:\"componentDidMount\",value:// Get all campuses data from back-end database\nfunction componentDidMount(){console.log(this.props);this.props.fetchAllCampuses();}// Render All Campuses view by passing all campuses data as props to the corresponding View component\n},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(AllCampusesView,{allCampuses:this.props.allCampuses})]});}}]);return AllCampusesContainer;}(Component);// 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\n// The \"mapState\" is called when the Store State changes, and it returns a data object of \"allCampuses\".\n// The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\nvar mapState=function mapState(state){return{allCampuses:state.allCampuses// Get the State object from Reducer \"allCampuses\"\n};};// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nvar mapDispatch=function mapDispatch(dispatch){return{fetchAllCampuses:function fetchAllCampuses(){return dispatch(fetchAllCampusesThunk());}};};// Type check props;\n// Export store-connected container by default\n// AllCampusesContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\nexport default connect(mapState,mapDispatch)(AllCampusesContainer);","map":{"version":3,"names":["Header","Component","connect","fetchAllCampusesThunk","AllCampusesView","AllCampusesContainer","console","log","props","fetchAllCampuses","allCampuses","mapState","state","mapDispatch","dispatch"],"sources":["/home/ohwaaan/Hunter/Summer_2022/team/5/client-starter-code-main/src/components/containers/AllCampusesContainer.js"],"sourcesContent":["/*==================================================\n/src/components/containers\\AllCampusesContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchAllCampusesThunk } from \"../../store/thunks\";\nimport { AllCampusesView } from \"../views\";\n\nclass AllCampusesContainer extends Component {\n  // Get all campuses data from back-end database\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchAllCampuses();\n  }\n\n  // Render All Campuses view by passing all campuses data as props to the corresponding View component\n  render() {\n    return (\n      <div>\n        <Header />\n        <AllCampusesView\n          allCampuses={this.props.allCampuses}\n        />\n      </div>\n    );\n  }\n}\n\n// 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\n// The \"mapState\" is called when the Store State changes, and it returns a data object of \"allCampuses\".\n// The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\nconst mapState = (state) => {\n  return {\n    allCampuses: state.allCampuses,  // Get the State object from Reducer \"allCampuses\"\n  };\n};  \n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()),\n  };\n};\n\n// Type check props;\nAllCampusesContainer.propTypes = {\n  allCampuses: PropTypes.array.isRequired,\n  fetchAllCampuses: PropTypes.func.isRequired,\n};\n\n// Export store-connected container by default\n// AllCampusesContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\nexport default connect(mapState, mapDispatch)(AllCampusesContainer);"],"mappings":"wkBAAA;AACA;AACA;AACA;AACA;AACA;AACA,qDACA,MAAOA,OAAP,KAAmB,UAAnB,CACA,OAASC,SAAT,KAA0B,OAA1B,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,qBAAT,KAAsC,oBAAtC,CACA,OAASC,eAAT,KAAgC,UAAhC,C,2FAEMC,qB,8SACJ;AACA,4BAAoB,CAClBC,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB,EACA,KAAKA,KAAL,CAAWC,gBAAX,GACD,CAED;sBACA,iBAAS,CACP,mBACE,oCACE,KAAC,MAAD,IADF,cAEE,KAAC,eAAD,EACE,WAAW,CAAE,KAAKD,KAAL,CAAWE,WAD1B,EAFF,GADF,CAQD,C,kCAjBgCT,S,EAoBnC;AACA;AACA;AACA,GAAMU,SAAQ,CAAG,QAAXA,SAAW,CAACC,KAAD,CAAW,CAC1B,MAAO,CACLF,WAAW,CAAEE,KAAK,CAACF,WAAc;AAD5B,CAAP,CAGD,CAJD,CAKA;AACA;AACA,GAAMG,YAAW,CAAG,QAAdA,YAAc,CAACC,QAAD,CAAc,CAChC,MAAO,CACLL,gBAAgB,CAAE,kCAAMK,SAAQ,CAACX,qBAAqB,EAAtB,CAAd,EADb,CAAP,CAGD,CAJD,CAMA;AAMA;AACA;AACA;AACA,cAAeD,QAAO,CAACS,QAAD,CAAWE,WAAX,CAAP,CAA+BR,oBAA/B,CAAf"},"metadata":{},"sourceType":"module"}