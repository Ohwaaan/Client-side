{"ast":null,"code":"import _classCallCheck from\"/home/ohwaaan/Hunter/Summer_2022/team/5/client-starter-code-main/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/ohwaaan/Hunter/Summer_2022/team/5/client-starter-code-main/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/ohwaaan/Hunter/Summer_2022/team/5/client-starter-code-main/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/ohwaaan/Hunter/Summer_2022/team/5/client-starter-code-main/node_modules/@babel/runtime/helpers/esm/createSuper.js\";/*==================================================\nStudentContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */import Header from'./Header';import React,{Component}from\"react\";import{connect}from\"react-redux\";import{fetchStudentThunk}from\"../../store/thunks\";import{StudentView}from\"../views\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StudentContainer=/*#__PURE__*/function(_Component){_inherits(StudentContainer,_Component);var _super=_createSuper(StudentContainer);function StudentContainer(){_classCallCheck(this,StudentContainer);return _super.apply(this,arguments);}_createClass(StudentContainer,[{key:\"componentDidMount\",value:// Get student data from back-end database\nfunction componentDidMount(){//getting student ID from url\nthis.props.fetchStudent(this.props.match.params.id);}// Render Student view by passing student data as props to the corresponding View component\n},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(StudentView,{student:this.props.student})]});}}]);return StudentContainer;}(Component);// The following 2 input arguments are passed to the \"connect\" function used by \"StudentContainer\" to connect to Redux Store.  \n// The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\nvar mapState=function mapState(state){return{student:state.student// Get the State object from Reducer \"student\"\n};};// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nvar mapDispatch=function mapDispatch(dispatch){return{fetchStudent:function fetchStudent(id){return dispatch(fetchStudentThunk(id));}};};// Export store-connected container by default\n// StudentContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\nexport default connect(mapState,mapDispatch)(StudentContainer);","map":{"version":3,"names":["Header","React","Component","connect","fetchStudentThunk","StudentView","StudentContainer","props","fetchStudent","match","params","id","student","mapState","state","mapDispatch","dispatch"],"sources":["/home/ohwaaan/Hunter/Summer_2022/team/5/client-starter-code-main/src/components/containers/StudentContainer.js"],"sourcesContent":["/*==================================================\nStudentContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStudentThunk } from \"../../store/thunks\";\nimport { StudentView } from \"../views\";\n\nclass StudentContainer extends Component {\n  // Get student data from back-end database\n  componentDidMount() {\n    //getting student ID from url\n    this.props.fetchStudent(this.props.match.params.id);\n  }\n\n  // Render Student view by passing student data as props to the corresponding View component\n  render() {\n    return (\n      <div>\n        <Header />\n        <StudentView student={this.props.student} />\n      </div>\n    );\n  }\n}\n\n// The following 2 input arguments are passed to the \"connect\" function used by \"StudentContainer\" to connect to Redux Store.  \n// The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\nconst mapState = (state) => {\n  return {\n    student: state.student,  // Get the State object from Reducer \"student\"\n  };\n};\n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\n  };\n};\n\n// Export store-connected container by default\n// StudentContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\nexport default connect(mapState, mapDispatch)(StudentContainer);"],"mappings":"wkBAAA;AACA;AACA;AACA;AACA;AACA;AACA,qDACA,MAAOA,OAAP,KAAmB,UAAnB,CACA,MAAOC,MAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,iBAAT,KAAkC,oBAAlC,CACA,OAASC,WAAT,KAA4B,UAA5B,C,2FAEMC,iB,0RACJ;AACA,4BAAoB,CAClB;AACA,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,EAAhD,EACD,CAED;sBACA,iBAAS,CACP,mBACE,oCACE,KAAC,MAAD,IADF,cAEE,KAAC,WAAD,EAAa,OAAO,CAAE,KAAKJ,KAAL,CAAWK,OAAjC,EAFF,GADF,CAMD,C,8BAf4BV,S,EAkB/B;AACA;AACA,GAAMW,SAAQ,CAAG,QAAXA,SAAW,CAACC,KAAD,CAAW,CAC1B,MAAO,CACLF,OAAO,CAAEE,KAAK,CAACF,OAAU;AADpB,CAAP,CAGD,CAJD,CAKA;AACA;AACA,GAAMG,YAAW,CAAG,QAAdA,YAAc,CAACC,QAAD,CAAc,CAChC,MAAO,CACLR,YAAY,CAAE,sBAACG,EAAD,QAAQK,SAAQ,CAACZ,iBAAiB,CAACO,EAAD,CAAlB,CAAhB,EADT,CAAP,CAGD,CAJD,CAMA;AACA;AACA;AACA,cAAeR,QAAO,CAACU,QAAD,CAAWE,WAAX,CAAP,CAA+BT,gBAA/B,CAAf"},"metadata":{},"sourceType":"module"}