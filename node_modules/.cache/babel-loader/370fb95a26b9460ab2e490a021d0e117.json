{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sara\\\\Desktop\\\\webdev final client side\\\\Client-side\\\\src\\\\components\\\\containers\\\\NewCampusContainer.js\";\n\n/*==================================================\r\nNewCampusContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\n\n/*----------------EVERYTHING BELOW HERE IS MY TEST CODE,MAY OR MAY NOT WORK------------*/\n\n/*----------------EVERYTHING BELOW HERE IS MY TEST CODE,MAY OR MAY NOT WORK------------*/\n\n/*----------------EVERYTHING BELOW HERE IS MY TEST CODE,MAY OR MAY NOT WORK------------*/\n\n/*----------------LOOK AT NewStudentContainer.js IF SOMETHING DONT WORK----------------*/\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { addCampusThunk } from '../../store/thunks';\nimport NewCampusView from '../views/NewCampusView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewCampusContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let campus = {\n        name: this.state.name,\n        address: this.state.address,\n        description: this.state.description\n      };\n      let newCampus = await this.props.addCampus(campus);\n      this.setState({\n        name: \"\",\n        address: \"\",\n        description: \"\",\n        campusId: null,\n        redirect: true,\n        redirectId: newCampus.id\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      address: \"\",\n      description: \"\",\n      campusId: null,\n      redirect: false,\n      redirectId: null\n    };\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/campus/${this.state.redirectID}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NewCampusView, {\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatch = dispatch => {\n  return {\n    addCampus: campus => dispatch(addCampusThunk(campus))\n  };\n};\n\nexport default connect(null, mapDispatch)(NewCampusContainer);","map":{"version":3,"names":["Header","Component","connect","Redirect","addCampusThunk","NewCampusView","NewCampusContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","campus","state","address","description","newCampus","addCampus","campusId","redirect","redirectId","id","componentWillUnmount","render","redirectID","mapDispatch","dispatch"],"sources":["C:/Users/Sara/Desktop/webdev final client side/Client-side/src/components/containers/NewCampusContainer.js"],"sourcesContent":["/*==================================================\r\nNewCampusContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\r\n\r\n/*----------------EVERYTHING BELOW HERE IS MY TEST CODE,MAY OR MAY NOT WORK------------*/ \r\n/*----------------EVERYTHING BELOW HERE IS MY TEST CODE,MAY OR MAY NOT WORK------------*/ \r\n/*----------------EVERYTHING BELOW HERE IS MY TEST CODE,MAY OR MAY NOT WORK------------*/ \r\n/*----------------LOOK AT NewStudentContainer.js IF SOMETHING DONT WORK----------------*/ \r\n\r\nimport Header from './Header';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { addCampusThunk } from '../../store/thunks'; \r\nimport NewCampusView from '../views/NewCampusView';\r\n\r\nclass NewCampusContainer extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      name:         \"\", \r\n      address:      \"\", \r\n      description:  \"\",\r\n      campusId:   null, \r\n      redirect:   false, \r\n      redirectId: null\r\n    };\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    let campus = {\r\n      name:         this.state.name,\r\n      address:      this.state.address,\r\n      description:  this.state.description\r\n    };\r\n\r\n    let newCampus = await this.props.addCampus(campus);\r\n\r\n    this.setState({\r\n      name :       \"\",\r\n      address:     \"\",\r\n      description: \"\",\r\n      campusId:   null,\r\n      redirect:   true,\r\n      redirectId: newCampus.id\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({redirect: false, redirectId: null});\r\n  }\r\n\r\n  render() {\r\n    if(this.state.redirect) {\r\n      return (<Redirect to={`/campus/${this.state.redirectID}`}/>)\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <NewCampusView \r\n          handleChange = {this.handleChange}\r\n          handleSubmit = {this.handleSubmit}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatch = (dispatch) => {\r\n  return({\r\n      addCampus: (campus) => dispatch(addCampusThunk(campus)),\r\n  })\r\n}\r\nexport default connect(null, mapDispatch)(NewCampusContainer);"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;;AACA;;AACA;AAEA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;;;AAEA,MAAMC,kBAAN,SAAiCL,SAAjC,CAA2C;EACzCM,WAAW,CAACC,KAAD,EAAO;IAChB,MAAMA,KAAN;;IADgB,KAYlBC,YAZkB,GAYHC,KAAK,IAAI;MACtB,KAAKC,QAAL,CAAc;QACZ,CAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;MADtB,CAAd;IAGD,CAhBiB;;IAAA,KAkBlBC,YAlBkB,GAkBH,MAAML,KAAN,IAAe;MAC5BA,KAAK,CAACM,cAAN;MAEA,IAAIC,MAAM,GAAG;QACXJ,IAAI,EAAU,KAAKK,KAAL,CAAWL,IADd;QAEXM,OAAO,EAAO,KAAKD,KAAL,CAAWC,OAFd;QAGXC,WAAW,EAAG,KAAKF,KAAL,CAAWE;MAHd,CAAb;MAMA,IAAIC,SAAS,GAAG,MAAM,KAAKb,KAAL,CAAWc,SAAX,CAAqBL,MAArB,CAAtB;MAEA,KAAKN,QAAL,CAAc;QACZE,IAAI,EAAS,EADD;QAEZM,OAAO,EAAM,EAFD;QAGZC,WAAW,EAAE,EAHD;QAIZG,QAAQ,EAAI,IAJA;QAKZC,QAAQ,EAAI,IALA;QAMZC,UAAU,EAAEJ,SAAS,CAACK;MANV,CAAd;IAQD,CArCiB;;IAEhB,KAAKR,KAAL,GAAa;MACXL,IAAI,EAAU,EADH;MAEXM,OAAO,EAAO,EAFH;MAGXC,WAAW,EAAG,EAHH;MAIXG,QAAQ,EAAI,IAJD;MAKXC,QAAQ,EAAI,KALD;MAMXC,UAAU,EAAE;IAND,CAAb;EAQD;;EA6BDE,oBAAoB,GAAG;IACrB,KAAKhB,QAAL,CAAc;MAACa,QAAQ,EAAE,KAAX;MAAkBC,UAAU,EAAE;IAA9B,CAAd;EACD;;EAEDG,MAAM,GAAG;IACP,IAAG,KAAKV,KAAL,CAAWM,QAAd,EAAwB;MACtB,oBAAQ,QAAC,QAAD;QAAU,EAAE,EAAG,WAAU,KAAKN,KAAL,CAAWW,UAAW;MAA/C;QAAA;QAAA;QAAA;MAAA,QAAR;IACD;;IAED,oBACE;MAAA,wBACE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,aAAD;QACE,YAAY,EAAI,KAAKpB,YADvB;QAEE,YAAY,EAAI,KAAKM;MAFvB;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EASD;;AA1DwC;;AA6D3C,MAAMe,WAAW,GAAIC,QAAD,IAAc;EAChC,OAAO;IACHT,SAAS,EAAGL,MAAD,IAAYc,QAAQ,CAAC3B,cAAc,CAACa,MAAD,CAAf;EAD5B,CAAP;AAGD,CAJD;;AAKA,eAAef,OAAO,CAAC,IAAD,EAAO4B,WAAP,CAAP,CAA2BxB,kBAA3B,CAAf"},"metadata":{},"sourceType":"module"}