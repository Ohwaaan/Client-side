{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sara\\\\Desktop\\\\webdev final client side\\\\Client-side\\\\src\\\\components\\\\views\\\\CampusView.js\";\n\n/*==================================================\r\nCampusView.js\r\n\r\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\r\nIt constructs a React component to display a single campus and its students (if any).\r\n================================================== */\nimport { Link } from \"react-router-dom\"; // Take in props data to construct the component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CampusView = props => {\n  const {\n    campus,\n    deleteCampus,\n    students,\n    deleteStudent,\n    editStudent\n  } = props; //TODO: how to add existing student\n  // pre-populate campus id for new student\n  // separate add existing / new student?\n  //if no students for campus, render campus with message that there are no students\n\n  if (!campus.students.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://www.dakotacollege.edu/application/files/3815/4834/4222/school.png\",\n        alt: \"default campus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: campus.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: campus.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: campus.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/campuses`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteCampus(campus.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No students currently enrolled.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/newstudent`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add New Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  } //if students exist, render campus with students\n  else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://www.dakotacollege.edu/application/files/3815/4834/4222/school.png\",\n        alt: \"default campus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: campus.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: campus.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: campus.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/campuses`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteCampus(campus.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), campus.students.map(student => {\n        let name = student.firstname + \" \" + student.lastname;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/student/${student.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/campus/${campus.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => student.campusId = null,\n              children: [\"Unenroll \", name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, student.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/newstudent`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add New Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c = CampusView;\nexport default CampusView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CampusView\");","map":{"version":3,"names":["Link","CampusView","props","campus","deleteCampus","students","deleteStudent","editStudent","length","name","address","description","id","map","student","firstname","lastname","campusId"],"sources":["C:/Users/Sara/Desktop/webdev final client side/Client-side/src/components/views/CampusView.js"],"sourcesContent":["/*==================================================\r\nCampusView.js\r\n\r\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\r\nIt constructs a React component to display a single campus and its students (if any).\r\n================================================== */\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Take in props data to construct the component\r\nconst CampusView = (props) => {\r\n  const {campus, deleteCampus, students, deleteStudent, editStudent} = props;\r\n\r\n  //TODO: how to add existing student\r\n  // pre-populate campus id for new student\r\n  // separate add existing / new student?\r\n  \r\n  //if no students for campus, render campus with message that there are no students\r\n  if(!campus.students.length)\r\n  {\r\n    return (\r\n      <div>\r\n        <img src = {\"https://www.dakotacollege.edu/application/files/3815/4834/4222/school.png\"} alt =\"default campus\"/>\r\n        <h1>{campus.name}</h1>\r\n        <p>{campus.address}</p>\r\n        <p>{campus.description}</p>\r\n        <Link to={`/campuses`}>\r\n          <button onClick={() => deleteCampus(campus.id)}>Delete</button>\r\n          </Link> \r\n       <h3>No students currently enrolled.</h3> \r\n       <Link to={`/newstudent`}>\r\n        <button>Add New Student</button>\r\n      </Link>\r\n      </div>\r\n    )\r\n\r\n  }\r\n  \r\n  //if students exist, render campus with students\r\n  else\r\n  {\r\n    return (\r\n      <div>\r\n        <img src = {\"https://www.dakotacollege.edu/application/files/3815/4834/4222/school.png\"} alt =\"default campus\"/>\r\n        <h1>{campus.name}</h1>\r\n        <p>{campus.address}</p>\r\n        <p>{campus.description}</p>\r\n        <Link to={`/campuses`}>\r\n          <button onClick={() => deleteCampus(campus.id)}>Delete</button>\r\n          </Link> \r\n        {campus.students.map( student => {\r\n          let name = student.firstname + \" \" + student.lastname;\r\n          return (\r\n            <div key={student.id}>\r\n              <Link to={`/student/${student.id}`}>\r\n                <h2>{name}</h2>\r\n              </Link>\r\n              <Link to={`/campus/${campus.id}`}>\r\n                  <button onClick={() => student.campusId=null}>Unenroll {name}</button>\r\n              </Link>             \r\n            </div>\r\n          );\r\n        })}\r\n          <Link to={`/newstudent`}>\r\n        <button>Add New Student</button>\r\n      </Link>\r\n      </div>\r\n    )\r\n  }    \r\n  };\r\n  \r\nexport default CampusView;"],"mappings":"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"},"metadata":{},"sourceType":"module"}