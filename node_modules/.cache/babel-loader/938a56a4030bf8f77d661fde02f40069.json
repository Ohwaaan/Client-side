{"ast":null,"code":"import _classCallCheck from\"/home/ohwaaan/Hunter/Summer_2022/team/5/client-starter-code-main/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/ohwaaan/Hunter/Summer_2022/team/5/client-starter-code-main/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/ohwaaan/Hunter/Summer_2022/team/5/client-starter-code-main/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/ohwaaan/Hunter/Summer_2022/team/5/client-starter-code-main/node_modules/@babel/runtime/helpers/esm/createSuper.js\";/*==================================================\nAllStudentsContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */import Header from'./Header';import{Component}from'react';import{connect}from'react-redux';import{withRouter}from\"react-router-dom\";import{fetchAllStudentsThunk,deleteStudentThunk}from'../../store/thunks';import AllStudentsView from'../views/AllStudentsView';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AllStudentsContainer=/*#__PURE__*/function(_Component){_inherits(AllStudentsContainer,_Component);var _super=_createSuper(AllStudentsContainer);function AllStudentsContainer(){_classCallCheck(this,AllStudentsContainer);return _super.apply(this,arguments);}_createClass(AllStudentsContainer,[{key:\"componentDidMount\",value:// Get all students data from back-end database\nfunction componentDidMount(){this.props.fetchAllStudents();}// Render All Students view by passing all students data as props to the corresponding View component\n},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(AllStudentsView,{students:this.props.allStudents,deleteStudent:this.props.deleteStudent})]});}}]);return AllStudentsContainer;}(Component);// The following 2 input arguments are passed to the \"connect\" function used by \"AllStudentsContainer\" component to connect to Redux Store.\n// 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\n// The \"mapState\" is called when the Store State changes, and it returns a data object of \"allStudents\".\nvar mapState=function mapState(state){return{allStudents:state.allStudents// Get the State object from Reducer \"allStudents\"\n};};// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nvar mapDispatch=function mapDispatch(dispatch){return{fetchAllStudents:function fetchAllStudents(){return dispatch(fetchAllStudentsThunk());},deleteStudent:function deleteStudent(studentId){return dispatch(deleteStudentThunk(studentId));}};};// Export store-connected container by default\n// AllStudentsContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\nexport default withRouter(connect(mapState,mapDispatch)(AllStudentsContainer));","map":{"version":3,"names":["Header","Component","connect","withRouter","fetchAllStudentsThunk","deleteStudentThunk","AllStudentsView","AllStudentsContainer","props","fetchAllStudents","allStudents","deleteStudent","mapState","state","mapDispatch","dispatch","studentId"],"sources":["/home/ohwaaan/Hunter/Summer_2022/team/5/client-starter-code-main/src/components/containers/AllStudentsContainer.js"],"sourcesContent":["/*==================================================\nAllStudentsContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\n\nimport { \n  fetchAllStudentsThunk,\n  deleteStudentThunk\n} from '../../store/thunks';\n\nimport AllStudentsView from '../views/AllStudentsView';\n\nclass AllStudentsContainer extends Component {\n  // Get all students data from back-end database\n  componentDidMount() {\n    this.props.fetchAllStudents();\n  }\n\n  // Render All Students view by passing all students data as props to the corresponding View component\n  render(){\n    return(\n      <div>\n        <Header />\n        <AllStudentsView \n          students={this.props.allStudents}\n          deleteStudent={this.props.deleteStudent}   \n        />\n      </div>\n    )\n  }\n}\n\n// The following 2 input arguments are passed to the \"connect\" function used by \"AllStudentsContainer\" component to connect to Redux Store.\n// 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\n// The \"mapState\" is called when the Store State changes, and it returns a data object of \"allStudents\".\nconst mapState = (state) => {\n  return {\n    allStudents: state.allStudents,  // Get the State object from Reducer \"allStudents\"\n  };\n};\n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchAllStudents: () => dispatch(fetchAllStudentsThunk()),\n    deleteStudent: (studentId) => dispatch(deleteStudentThunk(studentId)),\n  };\n};\n\n// Export store-connected container by default\n// AllStudentsContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\nexport default withRouter(connect(mapState, mapDispatch)(AllStudentsContainer));"],"mappings":"wkBAAA;AACA;AACA;AACA;AACA;AACA;AACA,qDACA,MAAOA,OAAP,KAAmB,UAAnB,CACA,OAASC,SAAT,KAA0B,OAA1B,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAEA,OACEC,qBADF,CAEEC,kBAFF,KAGO,oBAHP,CAKA,MAAOC,gBAAP,KAA4B,0BAA5B,C,2FAEMC,qB,8SACJ;AACA,4BAAoB,CAClB,KAAKC,KAAL,CAAWC,gBAAX,GACD,CAED;sBACA,iBAAQ,CACN,mBACE,oCACE,KAAC,MAAD,IADF,cAEE,KAAC,eAAD,EACE,QAAQ,CAAE,KAAKD,KAAL,CAAWE,WADvB,CAEE,aAAa,CAAE,KAAKF,KAAL,CAAWG,aAF5B,EAFF,GADF,CASD,C,kCAjBgCV,S,EAoBnC;AACA;AACA;AACA,GAAMW,SAAQ,CAAG,QAAXA,SAAW,CAACC,KAAD,CAAW,CAC1B,MAAO,CACLH,WAAW,CAAEG,KAAK,CAACH,WAAc;AAD5B,CAAP,CAGD,CAJD,CAKA;AACA;AACA,GAAMI,YAAW,CAAG,QAAdA,YAAc,CAACC,QAAD,CAAc,CAChC,MAAO,CACLN,gBAAgB,CAAE,kCAAMM,SAAQ,CAACX,qBAAqB,EAAtB,CAAd,EADb,CAELO,aAAa,CAAE,uBAACK,SAAD,QAAeD,SAAQ,CAACV,kBAAkB,CAACW,SAAD,CAAnB,CAAvB,EAFV,CAAP,CAID,CALD,CAOA;AACA;AACA;AACA,cAAeb,WAAU,CAACD,OAAO,CAACU,QAAD,CAAWE,WAAX,CAAP,CAA+BP,oBAA/B,CAAD,CAAzB"},"metadata":{},"sourceType":"module"}